{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyHomepage\\\\front\\\\components\\\\AppLayout.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Menu, Row, Col } from 'antd';\nimport styled from 'styled-components';\nimport { GithubOutlined, HomeOutlined, BookOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\n\nconst AppLayout = ({\n  children\n}) => {\n  // 이 children 개념에서\n  // <AppLayout> 이 부분의 것들을 children으로 볼 수 있음 </AppLayout>\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(Menu, {\n    style: {\n      fontWeight: 'bold',\n      width: 500\n    },\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, __jsx(Menu.Item, {\n    key: \"home\",\n    icon: __jsx(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 49\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, \"Home\"))), __jsx(Menu.Item, {\n    key: \"portfolio\",\n    icon: __jsx(BookOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 54\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"/portfolio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }, \"portfolio\"))), __jsx(Menu.Item, {\n    key: \"github\",\n    icon: __jsx(GithubOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"https://github.com/KIMJINOH97\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, \"github\"))), __jsx(Menu.Item, {\n    key: \"tistory\",\n    icon: __jsx(BookOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(Link, {\n    href: \"https://zin-oh.tistory.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, \"tistory\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \" \", children)), __jsx(StyledButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" hi \"));\n};\n\nexport default AppLayout; // 이런식으로 적용\n\nconst StyledButton = styled.button`\n    font-weight: bold;\n    font-size: 1rem;\n    color: red;\n`; // 무조건 첫문자 대문자임","map":{"version":3,"sources":["C:/MyHomepage/front/components/AppLayout.js"],"names":["React","Menu","Row","Col","styled","GithubOutlined","HomeOutlined","BookOutlined","Link","AppLayout","children","fontWeight","width","StyledButton","button"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,MAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,YAAvC,QAA2D,mBAA3D;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChC;AACA;AAEA,SACI,4BACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KAAb;AAAiD,IAAA,IAAI,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,MAAf;AAAsB,IAAA,IAAI,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CADJ,EAMI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,WAAf;AAA2B,IAAA,IAAI,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,CANJ,EAWI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CAXJ,EAgBI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC,SAAf;AAAyB,IAAA,IAAI,EAAE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,6BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAhBJ,CADJ,CADJ,EAyBI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOF,QAAP,CADJ,CAzBJ,EA4BI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BJ,CADJ;AAgCH,CApCD;;AAsCA,eAAeD,SAAf,C,CAEA;;AACA,MAAMI,YAAY,GAAGT,MAAM,CAACU,MAAO;;;;CAAnC,C,CAKA","sourcesContent":["import React from 'react';\r\nimport { Menu, Row, Col } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { GithubOutlined, HomeOutlined, BookOutlined } from '@ant-design/icons';\r\nimport Link from 'next/link';\r\n\r\nconst AppLayout = ({ children }) => {\r\n    // 이 children 개념에서\r\n    // <AppLayout> 이 부분의 것들을 children으로 볼 수 있음 </AppLayout>\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Menu style={{ fontWeight: 'bold', width: 500 }} mode=\"horizontal\">\r\n                    <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n                        <Link href=\"/\">\r\n                            <a>Home</a>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"portfolio\" icon={<BookOutlined />}>\r\n                        <Link href=\"/portfolio\">\r\n                            <a>portfolio</a>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"github\" icon={<GithubOutlined />}>\r\n                        <Link href=\"https://github.com/KIMJINOH97\">\r\n                            <a>github</a>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"tistory\" icon={<BookOutlined />}>\r\n                        <Link href=\"https://zin-oh.tistory.com/\">\r\n                            <a>tistory</a>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Row>\r\n            <Row>\r\n                <Col> {children}</Col>\r\n            </Row>\r\n            <StyledButton> hi </StyledButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AppLayout;\r\n\r\n// 이런식으로 적용\r\nconst StyledButton = styled.button`\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n    color: red;\r\n`;\r\n// 무조건 첫문자 대문자임\r\n"]},"metadata":{},"sourceType":"module"}